{"version":3,"sources":["components/CommandPrompt.module.css","App.module.css","components/CommandPrompt.js","components/commands/Help.js","components/commands/WhoAmI.js","components/commands/Projects.js","components/Output.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CommandPrompt","props","commandInputRef","useRef","useState","commandInput","changeCommandInput","useEffect","current","addEventListener","event","key","keyCode","trim","toLowerCase","onEnterPress","focus","document","querySelector","target","getAttribute","className","styles","User","user","style","color","LastCommand","lastCommand","ref","onChange","value","placeholder","title","Help","WhoAmI","mitASCII","Projects","repos","map","repo","index","name","description","href","html_url","alt","rel","homepage","ms","s","parseInt","date","y","m","d","h","convertMSToTimeDelta","Date","now","parse","updated_at","Output","command","window","installPWA","location","hallowsASCII","App","updateLastCommand","updateRepos","updateMitASCII","updateHallowsASCII","fetch","then","res","json","data","i","length","j","swap","catch","e","console","error","text","issueCommand","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","URL","process","origin","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.632e461e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"User\":\"CommandPrompt_User__cSwlE\",\"CommandPrompt\":\"CommandPrompt_CommandPrompt__2A2vf\",\"LastCommand\":\"CommandPrompt_LastCommand__1ELmS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","import React, { useEffect, useRef, useState } from 'react';\n\nimport styles from './CommandPrompt.module.css';\n\nconst CommandPrompt = (props) => {\n\n  // refs\n  const commandInputRef = useRef();\n\n  // states\n  const [commandInput, changeCommandInput] = useState(\"\");\n\n  // effects\n  useEffect(() => {\n    commandInputRef.current.addEventListener('keyup', (event) => {\n      if (event.key === \"Enter\" || event.keyCode === 13) {\n        if (commandInput !== '' && commandInput.trim().toLowerCase() !== 'home') {\n          props.onEnterPress(commandInput.trim());\n        }\n        else {\n          props.onEnterPress('~')\n        }\n        changeCommandInput('');\n      }\n    });\n    commandInputRef.current.focus();\n    document.querySelector('*').addEventListener('click', (event) => {\n      if(!(event.target.getAttribute('href'))) {\n        commandInputRef.current.focus();\n      }\n    });\n  }, [props, commandInput]);\n\n  return (\n    <div className={styles.CommandPrompt}>\n      <span className={styles.User}>{props.user}</span>\n      &nbsp;=&gt;&nbsp;cmd:&nbsp;\n      <span style={{ color: 'white' }}>\n        <span className={styles.LastCommand}>\n          {props.lastCommand}\n        </span>\n        &nbsp;=&gt;&nbsp;\n      </span>\n      <br />\n      <input ref={commandInputRef}\n        onChange={event => changeCommandInput(event.target.value)}\n        value={commandInput}\n        placeholder='command'\n        title='command' />\n    </div>\n  );\n}\n\nexport default CommandPrompt;\n","import React from 'react';\n\nconst Help = () => {\n  return (\n    <div>\n      The following general case-insensitive commands are available:\n      <ul>\n        <li>\n          who: to know more about me\n        </li>\n        <li>\n          projects: to know what projects I have worked on\n        </li>\n        <li>\n          install: to install this PWA if supported by your browser\n        </li>\n        <li>\n          linkedin: you'll be taken to my LinkedIn page\n        </li>\n        <li>\n          github: you'll be taken to my GitHub profile\n        </li>\n        <li>\n          license\n        </li>\n      </ul>\n      However, these are not the only commands that are recognized.\n      There are some easter eggs for you to find out (try the \"valar morghulis\" command or the \"hallows\" command). ;)\n      <br />\n      [Note: This is displayed because you are on the homepage, you used the 'help' command,\n      or you used a command that wasn't recognized.]\n    </div>\n  );\n};\n\nexport default Help;\n","import React, { Fragment } from 'react';\n\nconst WhoAmI = (props) => {\n\n  return (\n    <Fragment>\n      <pre>{props.mitASCII}</pre>\n      <div>\n        Hi, I'm Mit Vasani.<br />\n        An enthusiastic and passionate web developer and freelancer.\n        Technologies I have worked with are:\n        <ul>\n          <li>HTML5, CSS3, Vanilla JS</li>\n          <li>Bootstrap, MDBootstrap, Halfmoon, Materialize</li>\n          <li>Less</li>\n          <li>React</li>\n          <li>PWAs</li>\n          <li>Python</li>\n          <li>Flask</li>\n          <li>BeautifulSoup</li>\n          <li>Python-Selenium</li>\n          <li>PHP</li>\n        </ul>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default WhoAmI;\n","import React, { Fragment, useState } from 'react';\n\nconst Projects = (props) => {\n\n  const convertMSToTimeDelta = (ms) => {\n    const s = parseInt(ms / 1000);\n    const date = { y: null, m: null, d: null, h: null };\n    date.h = parseInt(s / 3600);\n    date.d = parseInt(date.h / 24);\n    date.m = parseInt(date.d / 30);\n    date.y = parseInt(date.m / 12);\n    if (date.y) {\n      return date.y + 'y';\n    }\n    else if (date.m) {\n      return date.m + 'm';\n    }\n    else if (date.d) {\n      return date.d + 'd';\n    }\n    else {\n      return date.h + 'h';\n    }\n  };\n\n  // state\n  const [repos] = useState(props.repos);\n\n  return (\n    <span>\n      {repos.map((repo, index) => (\n        <Fragment key={index}>\n          Name: {repo.name}<br />\n          Description: {repo.description}<br />\n          GitHub: <a\n            href={repo.html_url}\n            alt='repo link'\n            target='_blank'\n            rel='noopener noreferrer'>\n              link\n            </a><br />\n          {\n            repo.homepage ?\n              (\n                <Fragment>\n                  Homepage:&nbsp;\n                  <a href={repo.homepage}\n                    alt='homepage' target='_blank'\n                    rel='noopener noreferrer'>\n                      link\n                  </a><br />\n                </Fragment>\n              ) :\n              null\n          }\n          Last updated: {convertMSToTimeDelta(Date.now() - Date.parse(repo.updated_at))} ago\n          &nbsp;<br />&nbsp;<br />\n        </Fragment>\n      ))}\n    </span>\n  );\n}\n\nexport default Projects;\n","import React, { Fragment } from 'react';\n\nimport Help from './commands/Help';\nimport WhoAmI from './commands/WhoAmI';\nimport Projects from './commands/Projects';\n\nconst Output = (props) => {\n  \n  if(props.command === 'who') {\n    return <WhoAmI mitASCII={props.mitASCII} />;\n  }\n  else if(props.command === 'install') {\n    if(window.installPWA && window.installPWA()) {\n      return <div>You should be prompted for installation.</div>;\n    }\n    else {\n      return <div>Already installed or can't be installed.</div>\n    }\n  }\n  else if(props.command === 'projects') {\n    return <Projects repos={props.repos} />;\n  }\n  else if(props.command === 'address') {\n    return (\n      <span>221B Baker Street</span>\n    );\n  }\n  else if(props.command === 'valar morghulis') {\n    return (\n      <span>valar dohaeris</span>\n    );\n  }\n  else if(props.command === 'scratch') {\n    return (\n      <span>'Tis but a scratch!</span>\n    );\n  }\n  else if(props.command === 'alchemy') {\n    return (\n      <span>\n        Alchemy, It is the scientific technique of understanding the structure of matter, decomposing it, and then reconstructing it.\n        If performed skillfully, it is even possible to create gold out of lead.\n        However, as it is a science, there are some natural principles in place.\n        Only one thing can be created from something else of a certain mass.\n        This is the Principle of Equivalent Exchange. \n      </span>\n    );\n  }\n  else if(props.command === 'py zen') {\n    return (\n      <Fragment>\n        &gt;&gt;&gt; import this<br />\n        The Zen of Python, by Tim Peters<br />\n        &nbsp;<br />\n        Beautiful is better than ugly.<br />\n        Explicit is better than implicit.<br />\n        Simple is better than complex.<br />\n        Complex is better than complicated.<br />\n        Flat is better than nested.<br />\n        Sparse is better than dense.<br />\n        Readability counts.<br />\n        Special cases aren't special enough to break the rules.<br />\n        Although practicality beats purity.<br />\n        Errors should never pass silently.<br />\n        Unless explicitly silenced.<br />\n        In the face of ambiguity, refuse the temptation to guess.<br />\n        There should be one-- and preferably only one --obvious way to do it.<br />\n        Although that way may not be obvious at first unless you're Dutch.<br />\n        Now is better than never.<br />\n        Although never is often better than *right* now.<br />\n        If the implementation is hard to explain, it's a bad idea.<br />\n        If the implementation is easy to explain, it may be a good idea.<br />\n        Namespaces are one honking great idea -- let's do more of those!\n      </Fragment>\n    );\n  }\n  else if(props.command === 'linkedin') {\n    window.location = 'https://www.linkedin.com/in/mit-vasani-8321a2138/';\n    return (\n      <span>\n        You should be taken to my LinkedIn page in a moment.\n      </span>\n    );\n  }\n  else if(props.command === 'github') {\n    window.location = 'https://github.com/vasanimit9';\n    return (\n      <span>\n        You should be taken to my github profile in a moment.\n      </span>\n    );\n  }\n  else if(props.command === 'hallows') {\n    return (\n      <pre>{props.hallowsASCII}</pre>\n    );\n  }\n  else if(props.command === 'license') {\n    return (\n      <Fragment>\n        MIT License<br />\n        <br />\n        Copyright (c) 2020 Mit Vasani<br />\n        <br />\n        Permission is hereby granted, free of charge, to any person obtaining a copy\n        of this software and associated documentation files (the \"Software\"), to deal\n        in the Software without restriction, including without limitation the rights\n        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n        copies of the Software, and to permit persons to whom the Software is\n        furnished to do so, subject to the following conditions:<br />\n        <br />\n        The above copyright notice and this permission notice shall be included in all\n        copies or substantial portions of the Software.<br />\n        <br />\n        THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n        SOFTWARE.\n      </Fragment>\n    );\n  }\n  else {\n    return <Help />;\n  }\n}\n\nexport default Output;\n","import React, { useEffect, useState } from 'react';\n\nimport styles from './App.module.css';\nimport CommandPrompt from './components/CommandPrompt';\nimport Output from './components/Output';\n\nfunction App() {\n\n  const user = 'vasanimit9';\n\n  // states\n  const [lastCommand, updateLastCommand] = useState('~');\n  const [repos, updateRepos] = useState([]);\n  const [mitASCII, updateMitASCII] = useState();\n  const [hallowsASCII, updateHallowsASCII] = useState();\n\n  // effect\n  useEffect(() => {\n    fetch('https://vasanimit9.pythonanywhere.com/static/repos.json?t='\n        + parseInt(Date.now() / 600000))\n      .then(res => res.json())\n      .then(data => {\n        for (let i = 0; i < data.length; i++) {\n          for (let j = 0; j < i; j++) {\n            if (data[i].updated_at > data[j].updated_at) {\n              let swap = data[i];\n              data[i] = data[j];\n              data[j] = swap;\n            }\n          }\n        }\n        return data;\n      })\n      .then(data => updateRepos(data))\n      .catch(e => console.error(e));\n  }, []);\n  useEffect(() => {\n    fetch('/mit_ascii.txt')\n      .then(res => res.text())\n      .then(data => updateMitASCII(data))\n      .catch(e => console.error(e));\n  }, []);\n  useEffect(() => {\n    fetch('/hallows_ascii.txt')\n      .then(res => res.text())\n      .then(data => updateHallowsASCII(data))\n      .catch(e => console.error(e));\n  }, []);\n\n  // handler\n  const issueCommand = (command) => {\n    if (command === 'home' || command === '') {\n      updateLastCommand('~');\n    }\n    else {\n      updateLastCommand(command.toLowerCase());\n    }\n  }\n\n  return (\n    <div className={styles.App}>\n      <Output command={lastCommand}\n        repos={repos}\n        mitASCII={mitASCII}\n        hallowsASCII={hallowsASCII} />\n      <CommandPrompt\n        user={user}\n        lastCommand={lastCommand}\n        onEnterPress={(command) => issueCommand(command)}\n      />\n    </div>\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}